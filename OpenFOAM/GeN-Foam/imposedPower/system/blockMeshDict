/*--------------------------------*- C++ -*----------------------------------*\
|       ______          _   __           ______                               |
|      / ____/  ___    / | / /          / ____/  ____   ____ _   ____ ___     |
|     / / __   / _ \  /  |/ /  ______  / /_     / __ \ / __ `/  / __ `__ \    |
|    / /_/ /  /  __/ / /|  /  /_____/ / __/    / /_/ // /_/ /  / / / / / /    |
|    \____/   \___/ /_/ |_/          /_/       \____/ \__,_/  /_/ /_/ /_/     |
|    Copyright (C) 2015 - 2022 EPFL                                           |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0      0       0)
    (0.1    0       0)
    (0.1    0.0157  0)
    (0      0.0157  0)

    (0      0       0.0157)
    (0.1    0       0.0157)
    (0.1    0.0157  0.0157)
    (0      0.0157  0.0157)

    (1.655  0       0)
    //(2.155  0       0)
    //(2.155  0.0157  0)
    (1.655  0.0157  0)

    (1.655 0        0.0157)
    //(2.155 0        0.0157)
    //(2.155 0.0157   0.0157)
    (1.655 0.0157   0.0157)
    
    /*
    (0 0 0)
    (0.5 0 0)
    (0.5 0.1 0)
    (0 0.1 0)

    (0 0 0.01)
    (0.5 0 0.01)
    (0.5 0.1 0.01)
    (0 0.1 0.01)

    (1.5 0 0)
    (2 0 0)
    (2 0.1 0)
    (1.5 0.1 0)

    (1.5 0 0.01)
    (2 0 0.01)
    (2 0.1 0.01)
    (1.5 0.1 0.01)
    */
);

blocks
(
    hex (0 1 2 3 4 5 6 7) dummyIn (5 1 1) (1 1 1)
    //hex (8 9 10 11 12 13 14 15) dummyOut (25 1 1)  (1 1 1)
    hex (1 8 9 2 5 10 11 6) heated (70 1 1)  (1 1 1) 
);

edges
(
);

boundary
(
    inlet
    {
        type wall;
        faces
        (
            (0 4 7 3)
        );
    }
    /*realInlet
    {
        type patch;
        faces
        (
            (1 5 6 2)
        );
    }*/
    outlet
    {
        type wall;
        faces
        (
            (8 10 11 9)
        );
    }
    fixedWalls
    {
        type wall;
        faces
        (
            (0 1 5 4)
            (1 8 10 5)
            //(8 9 13 12)
            (2 3 7 6)
            (11 6 2 9)
            //(10 11 15 14)

            (4 5 6 7)
            (5 10 11 6)
            //(12 13 14 15)
            (0 3 2 1)
            (1 2 9 8)
            //(8 11 10 9)
        );
    }
    /*frontAndBack
    {
        type empty;
        faces
        (
            (4 5 6 7)
            (5 12 15 6)
            (12 13 14 15)
            (0 3 2 1)
            (1 2 11 8)
            (8 11 10 9)
        );
    }*/
);

mergePatchPairs
(
);

// ************************************************************************* //
