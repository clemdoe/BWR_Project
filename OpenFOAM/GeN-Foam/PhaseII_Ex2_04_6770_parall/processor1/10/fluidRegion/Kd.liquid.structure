/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2312                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    arch        "LSB;label=32;scalar=64";
    class       volTensorField;
    location    "10/fluidRegion";
    object      Kd.liquid.structure;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -3 -1 0 0 0 0];

internalField   nonuniform List<tensor> 
119
(
(1721.58 0 0 0 1721.58 0 0 0 1721.58)
(1718.2 0 0 0 1718.2 0 0 0 1718.2)
(1715.43 0 0 0 1715.43 0 0 0 1715.43)
(1712.78 0 0 0 1712.78 0 0 0 1712.78)
(1710.47 0 0 0 1710.47 0 0 0 1710.47)
(1240.22 0 0 0 1240.22 0 0 0 1240.22)
(1252.84 0 0 0 1252.84 0 0 0 1252.84)
(1262.19 0 0 0 1262.19 0 0 0 1262.19)
(1270.86 0 0 0 1270.86 0 0 0 1270.86)
(1278.04 0 0 0 1278.04 0 0 0 1278.04)
(1240.31 0 0 0 1240.31 0 0 0 1240.31)
(1253.35 0 0 0 1253.35 0 0 0 1253.35)
(1263.29 0 0 0 1263.29 0 0 0 1263.29)
(1272.52 0 0 0 1272.52 0 0 0 1272.52)
(1280.24 0 0 0 1280.24 0 0 0 1280.24)
(1979.95 0 0 0 1979.95 0 0 0 1979.95)
(1978.68 0 0 0 1978.68 0 0 0 1978.68)
(1977.29 0 0 0 1977.29 0 0 0 1977.29)
(1976.18 0 0 0 1976.18 0 0 0 1976.18)
(1974.96 0 0 0 1974.96 0 0 0 1974.96)
(1973.98 0 0 0 1973.98 0 0 0 1973.98)
(1972.9 0 0 0 1972.9 0 0 0 1972.9)
(1972.03 0 0 0 1972.03 0 0 0 1972.03)
(1971.08 0 0 0 1971.08 0 0 0 1971.08)
(1970.3 0 0 0 1970.3 0 0 0 1970.3)
(1969.45 0 0 0 1969.45 0 0 0 1969.45)
(1968.93 0 0 0 1968.93 0 0 0 1968.93)
(1973.77 0 0 0 1973.77 0 0 0 1973.77)
(1708.09 0 0 0 1708.09 0 0 0 1708.09)
(1706.41 0 0 0 1706.41 0 0 0 1706.41)
(1704.61 0 0 0 1704.61 0 0 0 1704.61)
(1702.94 0 0 0 1702.94 0 0 0 1702.94)
(1701.17 0 0 0 1701.17 0 0 0 1701.17)
(1699.53 0 0 0 1699.53 0 0 0 1699.53)
(1697.74 0 0 0 1697.74 0 0 0 1697.74)
(1696.09 0 0 0 1696.09 0 0 0 1696.09)
(1694.27 0 0 0 1694.27 0 0 0 1694.27)
(1692.59 0 0 0 1692.59 0 0 0 1692.59)
(1690.7 0 0 0 1690.7 0 0 0 1690.7)
(1688.97 0 0 0 1688.97 0 0 0 1688.97)
(1687.03 0 0 0 1687.03 0 0 0 1687.03)
(1685.24 0 0 0 1685.24 0 0 0 1685.24)
(1683.25 0 0 0 1683.25 0 0 0 1683.25)
(1681.4 0 0 0 1681.4 0 0 0 1681.4)
(1679.38 0 0 0 1679.38 0 0 0 1679.38)
(1677.48 0 0 0 1677.48 0 0 0 1677.48)
(1675.46 0 0 0 1675.46 0 0 0 1675.46)
(1673.54 0 0 0 1673.54 0 0 0 1673.54)
(1671.55 0 0 0 1671.55 0 0 0 1671.55)
(1648.72 0 0 0 1648.72 0 0 0 1648.72)
(1647.88 0 0 0 1647.88 0 0 0 1647.88)
(1646.96 0 0 0 1646.96 0 0 0 1646.96)
(1646.27 0 0 0 1646.27 0 0 0 1646.27)
(1645.48 0 0 0 1645.48 0 0 0 1645.48)
(1644.89 0 0 0 1644.89 0 0 0 1644.89)
(1644.22 0 0 0 1644.22 0 0 0 1644.22)
(1643.72 0 0 0 1643.72 0 0 0 1643.72)
(1643.15 0 0 0 1643.15 0 0 0 1643.15)
(1642.71 0 0 0 1642.71 0 0 0 1642.71)
(1642.22 0 0 0 1642.22 0 0 0 1642.22)
(1641.92 0 0 0 1641.92 0 0 0 1641.92)
(1643.47 0 0 0 1643.47 0 0 0 1643.47)
(1282.17 0 0 0 1282.17 0 0 0 1282.17)
(1285.17 0 0 0 1285.17 0 0 0 1285.17)
(1288.08 0 0 0 1288.08 0 0 0 1288.08)
(1290.65 0 0 0 1290.65 0 0 0 1290.65)
(1292.83 0 0 0 1292.83 0 0 0 1292.83)
(1294.82 0 0 0 1294.82 0 0 0 1294.82)
(1296.41 0 0 0 1296.41 0 0 0 1296.41)
(1297.86 0 0 0 1297.86 0 0 0 1297.86)
(1298.9 0 0 0 1298.9 0 0 0 1298.9)
(1299.85 0 0 0 1299.85 0 0 0 1299.85)
(1300.41 0 0 0 1300.41 0 0 0 1300.41)
(1300.92 0 0 0 1300.92 0 0 0 1300.92)
(1301.05 0 0 0 1301.05 0 0 0 1301.05)
(1301.16 0 0 0 1301.16 0 0 0 1301.16)
(1300.93 0 0 0 1300.93 0 0 0 1300.93)
(1300.69 0 0 0 1300.69 0 0 0 1300.69)
(1300.16 0 0 0 1300.16 0 0 0 1300.16)
(1299.64 0 0 0 1299.64 0 0 0 1299.64)
(1298.9 0 0 0 1298.9 0 0 0 1298.9)
(1298.16 0 0 0 1298.16 0 0 0 1298.16)
(1297.26 0 0 0 1297.26 0 0 0 1297.26)
(1296.38 0 0 0 1296.38 0 0 0 1296.38)
(1655.7 0 0 0 1655.7 0 0 0 1655.7)
(1654.88 0 0 0 1654.88 0 0 0 1654.88)
(1653.97 0 0 0 1653.97 0 0 0 1653.97)
(1653.28 0 0 0 1653.28 0 0 0 1653.28)
(1652.5 0 0 0 1652.5 0 0 0 1652.5)
(1651.93 0 0 0 1651.93 0 0 0 1651.93)
(1651.27 0 0 0 1651.27 0 0 0 1651.27)
(1650.78 0 0 0 1650.78 0 0 0 1650.78)
(1650.21 0 0 0 1650.21 0 0 0 1650.21)
(1649.79 0 0 0 1649.79 0 0 0 1649.79)
(1649.3 0 0 0 1649.3 0 0 0 1649.3)
(1649.02 0 0 0 1649.02 0 0 0 1649.02)
(1650.51 0 0 0 1650.51 0 0 0 1650.51)
(1284.76 0 0 0 1284.76 0 0 0 1284.76)
(1288.08 0 0 0 1288.08 0 0 0 1288.08)
(1291.32 0 0 0 1291.32 0 0 0 1291.32)
(1294.2 0 0 0 1294.2 0 0 0 1294.2)
(1296.68 0 0 0 1296.68 0 0 0 1296.68)
(1298.95 0 0 0 1298.95 0 0 0 1298.95)
(1300.8 0 0 0 1300.8 0 0 0 1300.8)
(1302.5 0 0 0 1302.5 0 0 0 1302.5)
(1303.77 0 0 0 1303.77 0 0 0 1303.77)
(1304.94 0 0 0 1304.94 0 0 0 1304.94)
(1305.7 0 0 0 1305.7 0 0 0 1305.7)
(1306.39 0 0 0 1306.39 0 0 0 1306.39)
(1306.7 0 0 0 1306.7 0 0 0 1306.7)
(1306.96 0 0 0 1306.96 0 0 0 1306.96)
(1306.87 0 0 0 1306.87 0 0 0 1306.87)
(1306.76 0 0 0 1306.76 0 0 0 1306.76)
(1306.35 0 0 0 1306.35 0 0 0 1306.35)
(1305.94 0 0 0 1305.94 0 0 0 1305.94)
(1305.28 0 0 0 1305.28 0 0 0 1305.28)
(1304.63 0 0 0 1304.63 0 0 0 1304.63)
(1303.81 0 0 0 1303.81 0 0 0 1303.81)
(1302.99 0 0 0 1302.99 0 0 0 1302.99)
)
;

boundaryField
{
    inlet
    {
        type            zeroGradient;
    }
    outlet
    {
        type            zeroGradient;
    }
    fixedWalls
    {
        type            zeroGradient;
    }
    frontAndright
    {
        type            symmetry;
    }
    procBoundary1to0
    {
        type            processor;
        value           nonuniform List<tensor> 
83
(
(2225.74 0 0 0 2225.74 0 0 0 2225.74)
(2195.17 0 0 0 2195.17 0 0 0 2195.17)
(2172.49 0 0 0 2172.49 0 0 0 2172.49)
(2151.51 0 0 0 2151.51 0 0 0 2151.51)
(2134.19 0 0 0 2134.19 0 0 0 2134.19)
(1721.58 0 0 0 1721.58 0 0 0 1721.58)
(1718.2 0 0 0 1718.2 0 0 0 1718.2)
(1715.43 0 0 0 1715.43 0 0 0 1715.43)
(1712.78 0 0 0 1712.78 0 0 0 1712.78)
(1710.47 0 0 0 1710.47 0 0 0 1710.47)
(1721.89 0 0 0 1721.89 0 0 0 1721.89)
(1719.13 0 0 0 1719.13 0 0 0 1719.13)
(1716.97 0 0 0 1716.97 0 0 0 1716.97)
(1714.94 0 0 0 1714.94 0 0 0 1714.94)
(1713.19 0 0 0 1713.19 0 0 0 1713.19)
(2121.56 0 0 0 2121.56 0 0 0 2121.56)
(2112.61 0 0 0 2112.61 0 0 0 2112.61)
(2103.61 0 0 0 2103.61 0 0 0 2103.61)
(2095.59 0 0 0 2095.59 0 0 0 2095.59)
(2087.98 0 0 0 2087.98 0 0 0 2087.98)
(2081.08 0 0 0 2081.08 0 0 0 2081.08)
(2074.51 0 0 0 2074.51 0 0 0 2074.51)
(2068.54 0 0 0 2068.54 0 0 0 2068.54)
(2062.77 0 0 0 2062.77 0 0 0 2062.77)
(2057.55 0 0 0 2057.55 0 0 0 2057.55)
(2052.42 0 0 0 2052.42 0 0 0 2052.42)
(2047.77 0 0 0 2047.77 0 0 0 2047.77)
(2043.16 0 0 0 2043.16 0 0 0 2043.16)
(2038.98 0 0 0 2038.98 0 0 0 2038.98)
(2034.78 0 0 0 2034.78 0 0 0 2034.78)
(2030.96 0 0 0 2030.96 0 0 0 2030.96)
(2027.12 0 0 0 2027.12 0 0 0 2027.12)
(2023.6 0 0 0 2023.6 0 0 0 2023.6)
(2020.07 0 0 0 2020.07 0 0 0 2020.07)
(2016.8 0 0 0 2016.8 0 0 0 2016.8)
(2013.55 0 0 0 2013.55 0 0 0 2013.55)
(1981.51 0 0 0 1981.51 0 0 0 1981.51)
(1708.09 0 0 0 1708.09 0 0 0 1708.09)
(1706.41 0 0 0 1706.41 0 0 0 1706.41)
(1704.61 0 0 0 1704.61 0 0 0 1704.61)
(1702.94 0 0 0 1702.94 0 0 0 1702.94)
(1701.17 0 0 0 1701.17 0 0 0 1701.17)
(1699.53 0 0 0 1699.53 0 0 0 1699.53)
(1697.74 0 0 0 1697.74 0 0 0 1697.74)
(1696.09 0 0 0 1696.09 0 0 0 1696.09)
(1694.27 0 0 0 1694.27 0 0 0 1694.27)
(1692.59 0 0 0 1692.59 0 0 0 1692.59)
(1690.7 0 0 0 1690.7 0 0 0 1690.7)
(1688.97 0 0 0 1688.97 0 0 0 1688.97)
(1687.03 0 0 0 1687.03 0 0 0 1687.03)
(1685.24 0 0 0 1685.24 0 0 0 1685.24)
(1683.25 0 0 0 1683.25 0 0 0 1683.25)
(1681.4 0 0 0 1681.4 0 0 0 1681.4)
(1679.38 0 0 0 1679.38 0 0 0 1679.38)
(1677.48 0 0 0 1677.48 0 0 0 1677.48)
(1675.46 0 0 0 1675.46 0 0 0 1675.46)
(1673.54 0 0 0 1673.54 0 0 0 1673.54)
(1671.55 0 0 0 1671.55 0 0 0 1671.55)
(1669.65 0 0 0 1669.65 0 0 0 1669.65)
(1649.79 0 0 0 1649.79 0 0 0 1649.79)
(1711.23 0 0 0 1711.23 0 0 0 1711.23)
(1709.88 0 0 0 1709.88 0 0 0 1709.88)
(1708.42 0 0 0 1708.42 0 0 0 1708.42)
(1707.06 0 0 0 1707.06 0 0 0 1707.06)
(1705.58 0 0 0 1705.58 0 0 0 1705.58)
(1704.21 0 0 0 1704.21 0 0 0 1704.21)
(1702.68 0 0 0 1702.68 0 0 0 1702.68)
(1701.26 0 0 0 1701.26 0 0 0 1701.26)
(1699.64 0 0 0 1699.64 0 0 0 1699.64)
(1698.15 0 0 0 1698.15 0 0 0 1698.15)
(1696.44 0 0 0 1696.44 0 0 0 1696.44)
(1694.86 0 0 0 1694.86 0 0 0 1694.86)
(1693.06 0 0 0 1693.06 0 0 0 1693.06)
(1691.4 0 0 0 1691.4 0 0 0 1691.4)
(1689.51 0 0 0 1689.51 0 0 0 1689.51)
(1687.76 0 0 0 1687.76 0 0 0 1687.76)
(1685.82 0 0 0 1685.82 0 0 0 1685.82)
(1684 0 0 0 1684 0 0 0 1684)
(1682.04 0 0 0 1682.04 0 0 0 1682.04)
(1680.18 0 0 0 1680.18 0 0 0 1680.18)
(1678.24 0 0 0 1678.24 0 0 0 1678.24)
(1676.38 0 0 0 1676.38 0 0 0 1676.38)
(1656.76 0 0 0 1656.76 0 0 0 1656.76)
)
;
    }
    procBoundary1to2
    {
        type            processor;
        value           nonuniform List<tensor> 
83
(
(1721.89 0 0 0 1721.89 0 0 0 1721.89)
(1719.13 0 0 0 1719.13 0 0 0 1719.13)
(1716.97 0 0 0 1716.97 0 0 0 1716.97)
(1714.94 0 0 0 1714.94 0 0 0 1714.94)
(1713.19 0 0 0 1713.19 0 0 0 1713.19)
(1240.31 0 0 0 1240.31 0 0 0 1240.31)
(1253.35 0 0 0 1253.35 0 0 0 1253.35)
(1263.29 0 0 0 1263.29 0 0 0 1263.29)
(1272.52 0 0 0 1272.52 0 0 0 1272.52)
(1280.24 0 0 0 1280.24 0 0 0 1280.24)
(1240.4 0 0 0 1240.4 0 0 0 1240.4)
(1253.86 0 0 0 1253.86 0 0 0 1253.86)
(1264.38 0 0 0 1264.38 0 0 0 1264.38)
(1274.17 0 0 0 1274.17 0 0 0 1274.17)
(1282.42 0 0 0 1282.42 0 0 0 1282.42)
(1648.72 0 0 0 1648.72 0 0 0 1648.72)
(1647.88 0 0 0 1647.88 0 0 0 1647.88)
(1646.96 0 0 0 1646.96 0 0 0 1646.96)
(1646.27 0 0 0 1646.27 0 0 0 1646.27)
(1645.48 0 0 0 1645.48 0 0 0 1645.48)
(1644.89 0 0 0 1644.89 0 0 0 1644.89)
(1644.22 0 0 0 1644.22 0 0 0 1644.22)
(1643.72 0 0 0 1643.72 0 0 0 1643.72)
(1643.15 0 0 0 1643.15 0 0 0 1643.15)
(1642.71 0 0 0 1642.71 0 0 0 1642.71)
(1642.22 0 0 0 1642.22 0 0 0 1642.22)
(1641.92 0 0 0 1641.92 0 0 0 1641.92)
(1643.47 0 0 0 1643.47 0 0 0 1643.47)
(1711.23 0 0 0 1711.23 0 0 0 1711.23)
(1709.88 0 0 0 1709.88 0 0 0 1709.88)
(1708.42 0 0 0 1708.42 0 0 0 1708.42)
(1707.06 0 0 0 1707.06 0 0 0 1707.06)
(1705.58 0 0 0 1705.58 0 0 0 1705.58)
(1704.21 0 0 0 1704.21 0 0 0 1704.21)
(1702.68 0 0 0 1702.68 0 0 0 1702.68)
(1701.26 0 0 0 1701.26 0 0 0 1701.26)
(1669.65 0 0 0 1669.65 0 0 0 1669.65)
(1669.65 0 0 0 1669.65 0 0 0 1669.65)
(1285.48 0 0 0 1285.48 0 0 0 1285.48)
(1285.21 0 0 0 1285.21 0 0 0 1285.21)
(1284.87 0 0 0 1284.87 0 0 0 1284.87)
(1284.72 0 0 0 1284.72 0 0 0 1284.72)
(1284.49 0 0 0 1284.49 0 0 0 1284.49)
(1284.45 0 0 0 1284.45 0 0 0 1284.45)
(1284.31 0 0 0 1284.31 0 0 0 1284.31)
(1284.33 0 0 0 1284.33 0 0 0 1284.33)
(1284.27 0 0 0 1284.27 0 0 0 1284.27)
(1284.33 0 0 0 1284.33 0 0 0 1284.33)
(1284.33 0 0 0 1284.33 0 0 0 1284.33)
(1284.24 0 0 0 1284.24 0 0 0 1284.24)
(1280.74 0 0 0 1280.74 0 0 0 1280.74)
(1284.76 0 0 0 1284.76 0 0 0 1284.76)
(1288.08 0 0 0 1288.08 0 0 0 1288.08)
(1291.32 0 0 0 1291.32 0 0 0 1291.32)
(1294.2 0 0 0 1294.2 0 0 0 1294.2)
(1296.68 0 0 0 1296.68 0 0 0 1296.68)
(1298.95 0 0 0 1298.95 0 0 0 1298.95)
(1300.8 0 0 0 1300.8 0 0 0 1300.8)
(1302.5 0 0 0 1302.5 0 0 0 1302.5)
(1295.4 0 0 0 1295.4 0 0 0 1295.4)
(1292.58 0 0 0 1292.58 0 0 0 1292.58)
(1292.34 0 0 0 1292.34 0 0 0 1292.34)
(1292.02 0 0 0 1292.02 0 0 0 1292.02)
(1291.9 0 0 0 1291.9 0 0 0 1291.9)
(1291.69 0 0 0 1291.69 0 0 0 1291.69)
(1291.67 0 0 0 1291.67 0 0 0 1291.67)
(1291.56 0 0 0 1291.56 0 0 0 1291.56)
(1291.59 0 0 0 1291.59 0 0 0 1291.59)
(1291.56 0 0 0 1291.56 0 0 0 1291.56)
(1291.64 0 0 0 1291.64 0 0 0 1291.64)
(1291.65 0 0 0 1291.65 0 0 0 1291.65)
(1291.51 0 0 0 1291.51 0 0 0 1291.51)
(1287.66 0 0 0 1287.66 0 0 0 1287.66)
(1287.35 0 0 0 1287.35 0 0 0 1287.35)
(1291 0 0 0 1291 0 0 0 1291)
(1294.57 0 0 0 1294.57 0 0 0 1294.57)
(1297.78 0 0 0 1297.78 0 0 0 1297.78)
(1300.56 0 0 0 1300.56 0 0 0 1300.56)
(1303.12 0 0 0 1303.12 0 0 0 1303.12)
(1305.25 0 0 0 1305.25 0 0 0 1305.25)
(1307.2 0 0 0 1307.2 0 0 0 1307.2)
(1308.72 0 0 0 1308.72 0 0 0 1308.72)
(1302.08 0 0 0 1302.08 0 0 0 1302.08)
)
;
    }
    procBoundary1to3
    {
        type            processor;
        value           nonuniform List<tensor> 
40
(
(1699.64 0 0 0 1699.64 0 0 0 1699.64)
(1698.15 0 0 0 1698.15 0 0 0 1698.15)
(1696.44 0 0 0 1696.44 0 0 0 1696.44)
(1694.86 0 0 0 1694.86 0 0 0 1694.86)
(1693.06 0 0 0 1693.06 0 0 0 1693.06)
(1691.4 0 0 0 1691.4 0 0 0 1691.4)
(1689.51 0 0 0 1689.51 0 0 0 1689.51)
(1687.76 0 0 0 1687.76 0 0 0 1687.76)
(1685.82 0 0 0 1685.82 0 0 0 1685.82)
(1684 0 0 0 1684 0 0 0 1684)
(1682.04 0 0 0 1682.04 0 0 0 1682.04)
(1680.18 0 0 0 1680.18 0 0 0 1680.18)
(1678.24 0 0 0 1678.24 0 0 0 1678.24)
(1303.77 0 0 0 1303.77 0 0 0 1303.77)
(1304.94 0 0 0 1304.94 0 0 0 1304.94)
(1305.7 0 0 0 1305.7 0 0 0 1305.7)
(1306.39 0 0 0 1306.39 0 0 0 1306.39)
(1306.7 0 0 0 1306.7 0 0 0 1306.7)
(1306.96 0 0 0 1306.96 0 0 0 1306.96)
(1306.87 0 0 0 1306.87 0 0 0 1306.87)
(1306.76 0 0 0 1306.76 0 0 0 1306.76)
(1306.35 0 0 0 1306.35 0 0 0 1306.35)
(1305.94 0 0 0 1305.94 0 0 0 1305.94)
(1305.28 0 0 0 1305.28 0 0 0 1305.28)
(1304.63 0 0 0 1304.63 0 0 0 1304.63)
(1303.81 0 0 0 1303.81 0 0 0 1303.81)
(1302.99 0 0 0 1302.99 0 0 0 1302.99)
(1310.12 0 0 0 1310.12 0 0 0 1310.12)
(1311.08 0 0 0 1311.08 0 0 0 1311.08)
(1311.97 0 0 0 1311.97 0 0 0 1311.97)
(1312.45 0 0 0 1312.45 0 0 0 1312.45)
(1312.88 0 0 0 1312.88 0 0 0 1312.88)
(1312.94 0 0 0 1312.94 0 0 0 1312.94)
(1312.97 0 0 0 1312.97 0 0 0 1312.97)
(1312.69 0 0 0 1312.69 0 0 0 1312.69)
(1312.39 0 0 0 1312.39 0 0 0 1312.39)
(1311.83 0 0 0 1311.83 0 0 0 1311.83)
(1311.27 0 0 0 1311.27 0 0 0 1311.27)
(1310.54 0 0 0 1310.54 0 0 0 1310.54)
(1309.8 0 0 0 1309.8 0 0 0 1309.8)
)
;
    }
}


// ************************************************************************* //
